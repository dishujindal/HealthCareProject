/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.LabAssistantRole;

import Business.Doctor.LabAssistant;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Organization.LabAssistantOrganization;
import Business.Organization.Organization;
import Business.WorkQueue.EncounterLabWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rekhajindal
 */
public class ManageWorkRequestJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private LabAssistant labAssistant;

    /**
     * Creates new form ManageDoctorWorkRequestJPanel
     */
    public ManageWorkRequestJPanel(JPanel upc, Enterprise enterprise, LabAssistant labAssistant) {
        initComponents();
        this.userProcessContainer = upc;
        this.enterprise = enterprise;
        this.labAssistant = labAssistant;
        populateWorkRequestTable();
        hideControls();
    }
    
    public void hideControls()
    {
        txtMessage.setVisible(false);
        labelMessage.setVisible(false);
        btnSend.setVisible(false);
    }
    
    public void populateWorkRequestTable() {
        DefaultTableModel model = (DefaultTableModel) LabWorkRequestTable.getModel();
        model.setRowCount(0);
        if (enterprise instanceof HospitalEnterprise || enterprise instanceof ClinicEnterprise) {
            for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()) {
                if (org instanceof LabAssistantOrganization) {
                    for (WorkRequest request : org.getWorkQueue().getWorkRequestList()) {
                        EncounterLabWorkRequest encounterRequest = (EncounterLabWorkRequest) request;
                        if (encounterRequest.getSenderEnterprise() == enterprise) {
                            Object[] row = new Object[5];
                            row[0] = encounterRequest;
                            row[1] = encounterRequest.getSender().getFirstName();
                            row[2] = encounterRequest.getPatientName();
                            row[3] = encounterRequest.getStatus();
                            row[4] = encounterRequest.getReceiver() == null ? null : encounterRequest.getReceiver().getFirstName()
                                    + "--"+encounterRequest.getReceiver().getSsnNumber();
                            model.addRow(row);
                        }
                        
                    }
                }
            }
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LabWorkRequestTable = new javax.swing.JTable();
        btnViewrequest = new javax.swing.JButton();
        btnProcessRequest = new javax.swing.JButton();
        btnAssign = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        labelMessage = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        btnSend = new javax.swing.JButton();

        jLabel1.setText("List of Work Requests");

        LabWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Message", "Doctor Name", "Patient Name", "Request Status", "Assigned TO"
            }
        ));
        jScrollPane1.setViewportView(LabWorkRequestTable);

        btnViewrequest.setText("View Request");
        btnViewrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewrequestActionPerformed(evt);
            }
        });

        btnProcessRequest.setText("Process Request");
        btnProcessRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessRequestActionPerformed(evt);
            }
        });

        btnAssign.setText("Assign To Me");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        labelMessage.setText("Message");

        btnSend.setText("Send Request ");
        btnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(67, 67, 67)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(138, 138, 138)
                                .addComponent(btnSend))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelMessage)
                            .addComponent(btnViewrequest))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(btnAssign)
                                .addGap(72, 72, 72)
                                .addComponent(btnProcessRequest))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(110, 110, 110))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnViewrequest)
                            .addComponent(btnAssign)
                            .addComponent(btnProcessRequest))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelMessage)
                            .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(btnBack)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSend)
                        .addGap(29, 29, 29)))
                .addGap(32, 32, 32))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        int selectedRow=LabWorkRequestTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select atleast one row");
            return;
        }
        WorkRequest request=(WorkRequest)LabWorkRequestTable.getValueAt(selectedRow, 0);
        request.setReceiver(labAssistant);
        populateWorkRequestTable();
    }//GEN-LAST:event_btnAssignActionPerformed

    private void btnProcessRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessRequestActionPerformed
        // TODO add your handling code here:
        int selectedRow=LabWorkRequestTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select atleast one row");
            return;
        }
        txtMessage.setVisible(true);
        labelMessage.setVisible(true);
        btnSend.setVisible(true);
        
    }//GEN-LAST:event_btnProcessRequestActionPerformed

    private void btnViewrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewrequestActionPerformed
        // TODO add your handling code here:
        int selectedRow=LabWorkRequestTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select atleast one row");
            return;
        }
        WorkRequest request=(WorkRequest)LabWorkRequestTable.getValueAt(selectedRow,0);
        EncounterLabWorkRequest encounterRequest = (EncounterLabWorkRequest) request;
        ViewRequestJPanel panel=new ViewRequestJPanel(userProcessContainer,encounterRequest);
        userProcessContainer.add("ViewRequestPanelforLAb",panel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewrequestActionPerformed

    private void btnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendActionPerformed
        // TODO add your handling code here:
        int selectedRow=LabWorkRequestTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select atleast one row");
            return;
        }
        String message=txtMessage.getText();
        if(message.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "please enter message");
            return;
        }
        WorkRequest request=(WorkRequest)LabWorkRequestTable.getValueAt(selectedRow, 0);
        EncounterLabWorkRequest encounterRequest=(EncounterLabWorkRequest)request;
        encounterRequest.setLabTestResult(message);
        encounterRequest.setStatus("completed");
        populateWorkRequestTable();
    }//GEN-LAST:event_btnSendActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable LabWorkRequestTable;
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnProcessRequest;
    private javax.swing.JButton btnSend;
    private javax.swing.JButton btnViewrequest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelMessage;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
