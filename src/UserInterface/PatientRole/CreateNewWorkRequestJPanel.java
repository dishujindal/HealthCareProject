/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.PatientRole;

import Business.Doctor.Doctor;
import Business.EcoSystem;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.Network.NetworkCity;
import Business.Network.NetworkState;
import Business.Organization.DoctorOrganization;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Person.Person;
import Business.WorkQueue.DoctorWorkRequest;
import Business.WorkQueue.HospitalEnterpriseAdminWorkRequest;
import Business.WorkQueue.PatientWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.DoctorRole.DoctorWorkAreaJPanel;
import java.awt.CardLayout;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rekhajindal
 */
public class CreateNewWorkRequestJPanel extends javax.swing.JPanel {
  
    private JPanel userProcessContainer;
    private EcoSystem system;
    private Patient patient;
    private Enterprise globalVariableEnterprise;
    
    
    /**
     * Creates new form CreateNewWorkRequestJPanel
     */
    public CreateNewWorkRequestJPanel(JPanel upc,EcoSystem system,Patient patient) {
        initComponents();
        this.userProcessContainer=upc;
        this.system=system;
        this.patient=patient;
        populateDoctorTable();
        hideControls();
    }

    public void hideControls()
    {
        txtMessage.setVisible(false);
        lblmsg.setVisible(false);
        btnrequest.setVisible(false);
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DoctorDetailsJtable = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        lblmsg = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        btnSelectDoctor = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnDoctorRating = new javax.swing.JButton();
        btnGiveRatings = new javax.swing.JButton();
        btnrequest = new javax.swing.JButton();

        jLabel4.setText("jLabel4");

        DoctorDetailsJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Person ID", "Doctor Name", "EnterpriseName"
            }
        ));
        jScrollPane1.setViewportView(DoctorDetailsJtable);

        jLabel8.setText("List of Doctors");

        lblmsg.setText("Message");

        btnSelectDoctor.setText("Select Doctor");
        btnSelectDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectDoctorActionPerformed(evt);
            }
        });

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnDoctorRating.setText("View Doctor Rating and Reviews");
        btnDoctorRating.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoctorRatingActionPerformed(evt);
            }
        });

        btnGiveRatings.setText("Give Rating To Doctors");
        btnGiveRatings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGiveRatingsActionPerformed(evt);
            }
        });

        btnrequest.setText("Send Request");
        btnrequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(lblmsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(28, 28, 28)
                            .addComponent(jLabel8))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(59, 59, 59)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnBack)
                                    .addGap(159, 159, 159)
                                    .addComponent(btnrequest))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(btnDoctorRating)
                                    .addGap(45, 45, 45)
                                    .addComponent(btnGiveRatings)
                                    .addGap(34, 34, 34)
                                    .addComponent(btnSelectDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(64, 64, 64))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel8)
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDoctorRating)
                    .addComponent(btnGiveRatings)
                    .addComponent(btnSelectDoctor))
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblmsg))
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnrequest))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelectDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectDoctorActionPerformed
        // TODO add your handling code here:
        String message=txtMessage.getText();
        int selectedRow=DoctorDetailsJtable.getSelectedRow();
        if(selectedRow <0)
        {
            JOptionPane.showMessageDialog(null, "please select atleast one row");
            return;
        }
        txtMessage.setVisible(true);
        lblmsg.setVisible(true);
        btnrequest.setVisible(true);
        
    }//GEN-LAST:event_btnSelectDoctorActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDoctorRatingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoctorRatingActionPerformed
        // TODO add your handling code here:
        int selectedRow=DoctorDetailsJtable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }
        Doctor doctor=(Doctor)DoctorDetailsJtable.getValueAt(selectedRow,0);
        ViewDoctorRatingAndReviewsJPanel panel=new ViewDoctorRatingAndReviewsJPanel(userProcessContainer,doctor,patient);
        userProcessContainer.add("ViewDoctorRatingPanel", panel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnDoctorRatingActionPerformed

    private void btnGiveRatingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGiveRatingsActionPerformed
        // TODO add your handling code here:
        int selectedRow=DoctorDetailsJtable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }
        Doctor doctor=(Doctor)DoctorDetailsJtable.getValueAt(selectedRow,0);
        RateDoctorExperienceJPanel panel=new RateDoctorExperienceJPanel(userProcessContainer,patient,doctor);
        userProcessContainer.add("RateDoctorExpereinceJPanel", panel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnGiveRatingsActionPerformed

    private void btnrequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrequestActionPerformed
        // TODO add your handling code here:
        
        int selectedRow=DoctorDetailsJtable.getSelectedRow();
        String message=txtMessage.getText();
        if(message.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "please enter the message");
            return;
        }
        Doctor doctor=(Doctor)DoctorDetailsJtable.getValueAt(selectedRow,0);
        Enterprise enterprise=(Enterprise)DoctorDetailsJtable.getValueAt(selectedRow,2);
        PatientWorkRequest request=new PatientWorkRequest();
        request.setMessage(message);
        request.setDoctor(doctor);
        request.setPatient(patient);
        request.setReceiver(doctor);
        request.setReceiverEnterprise(enterprise);
        request.setStatus("Sent");
        doctor.getWorkQueue().getWorkRequestList().add(request);
        patient.getWorkQueue().getWorkRequestList().add(request);
    }//GEN-LAST:event_btnrequestActionPerformed

//    public void getValuesFromWorkRequest()
//    {
//        
//        for(WorkRequest workRequest:patient.getWorkQueue().getWorkRequestList())
//        {
//            if(workRequest instanceof HospitalEnterpriseAdminWorkRequest)
//            {
//                HospitalEnterpriseAdminWorkRequest adminRequest=(HospitalEnterpriseAdminWorkRequest)workRequest;
//                hashMap.put(adminRequest.getDoctor(), adminRequest.getEnterpriseSender());
//            }
//            if(workRequest instanceof PatientWorkRequest)
//            {
//                PatientWorkRequest patientRequest=(PatientWorkRequest)workRequest;
//                hashMap.put(patientRequest.getDoctor(), patientRequest.getEnterprise());
//                
//            }
//        }
//    }

    public void populateDoctorTable()
    {
        
        DefaultTableModel model=(DefaultTableModel)DoctorDetailsJtable.getModel();
        model.setRowCount(0);
        Object[]row=new Object[3];
        row[0]=patient.getPreffredDoctor();
        row[1]=patient.getPreffredDoctor().getFirstName();
        row[2]=patient.getPrefferedDoctorEnterprise()==null? null:patient.getPrefferedDoctorEnterprise();
        model.addRow(row);
        if(patient.getTemporaryDoctor()!=null)
        {
            Object[]secondRow=new Object[3];
            secondRow[0]=patient.getTemporaryDoctor();
            secondRow[1]=patient.getTemporaryDoctor().getFirstName();
            secondRow[2]=patient.getSecondaryDoctorEnterprise();
            model.addRow(secondRow);
        }
        
        

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DoctorDetailsJtable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDoctorRating;
    private javax.swing.JButton btnGiveRatings;
    private javax.swing.JButton btnSelectDoctor;
    private javax.swing.JButton btnrequest;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblmsg;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
