/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.PatientRole;

import Business.Patient.Patient;
import Business.WorkQueue.PatientToPatientWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rekhajindal
 */
public class ManagePatientWorkRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Patient patient;
    /**
     * Creates new form ManagePatientWorkRequestJPanel
     */
    public ManagePatientWorkRequestJPanel(JPanel upc,Patient patient) {
        initComponents();
        this.userProcessContainer=upc;
        this.patient=patient;
        populatePatientSentRequestTable();
        populatePatientRecieveRequestTable();
        hideControls();
    }

    public void hideControls()
    {
        lblmsg.setVisible(false);
        txtMessage.setVisible(false);
        btnSendmsg.setVisible(false);
        
    }
    
    
    public void populatePatientRecieveRequestTable()
    {
        DefaultTableModel model=(DefaultTableModel)patientRequestJtable.getModel();
        model.setRowCount(0);
        for(WorkRequest request:patient.getWorkQueue().getWorkRequestList())
        {
            if(request instanceof PatientToPatientWorkRequest)
            {
                PatientToPatientWorkRequest workRequest=(PatientToPatientWorkRequest)request;
                if(workRequest.getSender()!=patient)
                {
                    Object[]row=new Object[3];
                    row[0]=workRequest;
                    row[1]=workRequest.getSender().getFirstName();
                    row[2]=workRequest.getDoctorName();
                    model.addRow(row);
                }
            }
        }
    }
    
    public void populatePatientSentRequestTable()
    {
        DefaultTableModel model=(DefaultTableModel)sentPatientWorkRequest.getModel();
        model.setRowCount(0);
        for(WorkRequest request:patient.getWorkQueue().getWorkRequestList())
        {
            if(request instanceof PatientToPatientWorkRequest)
            {
                PatientToPatientWorkRequest workRequest=(PatientToPatientWorkRequest)request;
                if(workRequest.getSender()==patient)
                {
                    Object[]row=new Object[3];
                    row[0]=workRequest;
                    row[1]=workRequest.getReceiver().getFirstName();
                    row[2]=workRequest.getDoctorName();
                    model.addRow(row);
                }
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        patientRequestJtable = new javax.swing.JTable();
        btnback = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        sentPatientWorkRequest = new javax.swing.JTable();
        btnSendreply = new javax.swing.JButton();
        lblmsg = new javax.swing.JLabel();
        txtMessage = new javax.swing.JTextField();
        btnSendmsg = new javax.swing.JButton();

        jLabel1.setText("List of patient receive Work Request");

        patientRequestJtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Message", "Send by Patient", "Regarding Doctor"
            }
        ));
        jScrollPane1.setViewportView(patientRequestJtable);

        btnback.setText("<< Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        jLabel2.setText("List of Patient Sent Work Request");

        sentPatientWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Message", "Send to Patient", "Regarding Doctor"
            }
        ));
        jScrollPane2.setViewportView(sentPatientWorkRequest);

        btnSendreply.setText("Send Reply");
        btnSendreply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendreplyActionPerformed(evt);
            }
        });

        lblmsg.setText("Message");

        btnSendmsg.setText("Send  Message");
        btnSendmsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendmsgActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(btnback)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(47, 47, 47)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(198, 198, 198)
                            .addComponent(btnSendreply))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(23, 23, 23)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel2))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(63, 63, 63)
                            .addComponent(lblmsg)
                            .addGap(31, 31, 31)
                            .addComponent(txtMessage)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(btnSendmsg)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnSendreply)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblmsg)
                    .addComponent(txtMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnSendmsg)
                .addGap(12, 12, 12)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(btnback)
                .addGap(46, 46, 46))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnbackActionPerformed

    private void btnSendreplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendreplyActionPerformed
        // TODO add your handling code here:
        int selectedRow=patientRequestJtable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }
        lblmsg.setVisible(true);
        txtMessage.setVisible(true);
        btnSendmsg.setVisible(true);
        
    }//GEN-LAST:event_btnSendreplyActionPerformed

    private void btnSendmsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendmsgActionPerformed
        // TODO add your handling code here:
        int selectedRow=patientRequestJtable.getSelectedRow();
        String message=txtMessage.getText();
        if(message.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "please select message ");
            return;
        }
        WorkRequest request=(WorkRequest)patientRequestJtable.getValueAt(selectedRow,0);
        PatientToPatientWorkRequest patientRequest=(PatientToPatientWorkRequest)request;
        PatientToPatientWorkRequest workRequest=new PatientToPatientWorkRequest();
        workRequest.setMessage(message);
        workRequest.setSender(patient);
        workRequest.setReceiver(patientRequest.getSender());
        workRequest.setDoctorName(patientRequest.getDoctorName());
        patient.getWorkQueue().getWorkRequestList().add(workRequest);
        patientRequest.getSender().getWorkQueue().getWorkRequestList().add(workRequest);
    }//GEN-LAST:event_btnSendmsgActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSendmsg;
    private javax.swing.JButton btnSendreply;
    private javax.swing.JButton btnback;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblmsg;
    private javax.swing.JTable patientRequestJtable;
    private javax.swing.JTable sentPatientWorkRequest;
    private javax.swing.JTextField txtMessage;
    // End of variables declaration//GEN-END:variables
}
