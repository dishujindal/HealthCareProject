/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.DoctorRole;

import Business.Doctor.Doctor;
import Business.Encounter.Encounter;
import Business.Enterprise.ClinicEnterprise;
import Business.Enterprise.Enterprise;
import Business.Enterprise.HospitalEnterprise;
import Business.Network.Network;
import Business.WorkQueue.EncounterLabWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rekhajindal
 */
public class ViewLabRequestJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Doctor doctor;
    private ArrayList<Network>networkList;
    /**
     * Creates new form ViewLabRequestJPanel
     */
    public ViewLabRequestJPanel(JPanel upc, Enterprise enterprise,Doctor doctor,ArrayList<Network>networkList) {
        initComponents();
        this.userProcessContainer=upc;
        this.enterprise=enterprise;
        this.doctor=doctor;
        this.networkList=networkList;
        populateEnterpriseCombo();
    }

    public void populateEnterpriseCombo()
    {
        comboEnterprise.removeAllItems();
        for(Enterprise enterprise:doctor.getEnterpriseList())
        {
            comboEnterprise.addItem(enterprise);
        }
    }
    
    public void populateLabTestWorkRequestTable(Enterprise enterprise)
    {
        DefaultTableModel model=(DefaultTableModel)LabWorkRequestTable.getModel();
        model.setRowCount(0);

        if(enterprise instanceof HospitalEnterprise )
        {
            HospitalEnterprise hosEnterprise=(HospitalEnterprise)enterprise;
            for(Encounter encounter:hosEnterprise.getEncounterList())
            {
                if(encounter.getDoctor()==doctor && encounter.getLabWorkRequest()!=null)
                {
                    
                      
                        Object[]row=new Object[6];
                        row[0]=encounter;
                        row[1]=encounter.getLabWorkRequest();
                        row[2]=encounter.getPatient().getPatientMRN();
                        row[3]=encounter.getPatient().getFirstName();
                        row[4]=encounter.getLabWorkRequest().getStatus();
                        row[5]=encounter.getLabWorkRequest().getLabTestResult();
                        model.addRow(row);
                    
                }
                
            }
            
        }
        
        if(enterprise instanceof ClinicEnterprise )
        {
            ClinicEnterprise clinicEnterprise=(ClinicEnterprise)enterprise;
            for(Encounter encounter:clinicEnterprise.getEncounterList())
            {
                if(encounter.getDoctor()==doctor && encounter.getLabWorkRequest()!=null)
                {
                     
                   
                        Object[]row=new Object[6];
                        row[0]=encounter;
                        row[1]=encounter.getLabWorkRequest();
                        row[2]=encounter.getPatient().getPatientMRN();
                        row[3]=encounter.getPatient().getFirstName();
                        row[4]=encounter.getLabWorkRequest().getStatus();
                        row[5]=encounter.getLabWorkRequest().getLabTestResult();
                        model.addRow(row);
                    
                }
                
            }
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        LabWorkRequestTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        comboEnterprise = new javax.swing.JComboBox();
        btnSendOtherPrescription = new javax.swing.JButton();
        labelOrganizationID = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();

        jLabel1.setText("List of Lab Request");

        LabWorkRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "EncounterID", "Request Message", "Patient MRN", "Patient Name", "Request Status", "Test Results"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(LabWorkRequestTable);

        jLabel2.setText("select Enterprise");

        comboEnterprise.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboEnterprise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboEnterpriseActionPerformed(evt);
            }
        });

        btnSendOtherPrescription.setText("Send prescription to Patient");
        btnSendOtherPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendOtherPrescriptionActionPerformed(evt);
            }
        });

        labelOrganizationID.setText("jLabel4");

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(jLabel2)
                        .addGap(28, 28, 28)
                        .addComponent(comboEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelOrganizationID))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(btnBack))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 604, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addComponent(btnSendOtherPrescription, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboEnterprise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelOrganizationID))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(btnSendOtherPrescription)
                .addGap(77, 77, 77)
                .addComponent(btnBack)
                .addGap(63, 63, 63))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void comboEnterpriseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboEnterpriseActionPerformed
        // TODO add your handling code here:
        Enterprise enterprise=(Enterprise)comboEnterprise.getSelectedItem();
        if(enterprise != null)
        {
            labelOrganizationID.setText(String.valueOf(enterprise.getOrganizationID()));
            populateLabTestWorkRequestTable(enterprise);
            
        }
    }//GEN-LAST:event_comboEnterpriseActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnSendOtherPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendOtherPrescriptionActionPerformed
        // TODO add your handling code here:
        int selectedRow=LabWorkRequestTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null,"Please select atleast one row");
            return;  
        }
        Encounter encounter=(Encounter)LabWorkRequestTable.getValueAt(selectedRow,0);
        SendPrescriptionToPatientsJPanel panel=new SendPrescriptionToPatientsJPanel(userProcessContainer,networkList,encounter);
        userProcessContainer.add("SendPrescriptiontoPatient", panel);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnSendOtherPrescriptionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable LabWorkRequestTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSendOtherPrescription;
    private javax.swing.JComboBox comboEnterprise;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelOrganizationID;
    // End of variables declaration//GEN-END:variables
}
