/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.SystemAdminWorkAreaJPanel;

import Business.Administrative;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Network.NetworkCity;
import Business.Network.NetworkState;
import Business.Person.Person;
import Business.Role.AdminRole;
import Business.Role.MainAdminRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rekhajindal
 */
public class ManageUserAccountJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private EcoSystem system;
    private Administrative admin;
    /**
     * Creates new form ManageUserAccountJPanel
     */
    public ManageUserAccountJPanel(JPanel upc, EcoSystem system) {
        initComponents();
        this.userProcessContainer=upc;
        this.system=system;
        this.admin=system.getAdministrative();
        
        comboStateName.removeAllItems();
        ComboCityName.removeAllItems();
        ComboEnterpriseName.removeAllItems();
        populateCountryCombo();
        populateRoleCombo();
        populateUserAccountTable();
    }
    
    public void populateStateCombo(Network network)
    {
        comboStateName.removeAllItems();
        for(NetworkState state:network.getNetworkStateList())
        {
            comboStateName.addItem(state);
        }
    }
    
    public void populateCityCombo(NetworkState networkState)
    {
        ComboCityName.removeAllItems();
        for(NetworkCity city:networkState.getNetworkCityList())
        {
            ComboCityName.addItem(city);
        }
    }

    public void populateEnterpriseName(NetworkCity city )
    {
        ComboEnterpriseName.removeAllItems();
        for(Enterprise enterprise:city.getEnterpriseDirectory().getEnterpriseList())
        {
            ComboEnterpriseName.addItem(enterprise);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        UserAccountsJTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboStateName = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        ComboCityName = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        ComboEnterpriseName = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        ComboRole = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        ComboCountry = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtLastName = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnrefresh = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        UserAccountsJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "EnterpriseName", "EnterpriseType", "Network Country", "NetworkState", "NetworkCity", "username"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(UserAccountsJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 37, 531, 91));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("User Account's Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 11, -1, -1));

        jLabel2.setText("select State Name");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 239, -1, -1));

        comboStateName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        comboStateName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStateNameActionPerformed(evt);
            }
        });
        add(comboStateName, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 236, 96, -1));

        jLabel3.setText("Select City Name");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 277, -1, -1));

        ComboCityName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboCityName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCityNameActionPerformed(evt);
            }
        });
        add(ComboCityName, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 274, 96, -1));

        jLabel4.setText("Select Enterprise");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 315, -1, -1));

        ComboEnterpriseName.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(ComboEnterpriseName, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 312, 96, -1));

        jLabel5.setText("User Name");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 394, -1, -1));
        add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 391, 96, -1));

        jLabel6.setText("Password");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 434, -1, -1));
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 431, 96, -1));

        btnSubmit.setText("Submit");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(248, 557, -1, -1));

        btnBack.setText("<< Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        add(btnBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(51, 594, -1, -1));

        jLabel7.setText("First Name");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 472, -1, -1));
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 469, 96, -1));

        jLabel8.setText("Select Role");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 353, -1, -1));

        ComboRole.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboRole.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboRoleActionPerformed(evt);
            }
        });
        add(ComboRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 350, 96, -1));

        jLabel9.setText("Select Country name");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 208, -1, -1));

        ComboCountry.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComboCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboCountryActionPerformed(evt);
            }
        });
        add(ComboCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 205, 96, -1));

        jLabel10.setText("Last Name");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(177, 510, -1, -1));
        add(txtLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 507, 96, -1));

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        add(btnDelete, new org.netbeans.lib.awtextra.AbsoluteConstraints(134, 147, -1, -1));

        btnrefresh.setText("Refresh");
        btnrefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnrefreshActionPerformed(evt);
            }
        });
        add(btnrefresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 147, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void comboStateNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStateNameActionPerformed
        // TODO add your handling code here:
        NetworkState networkState=(NetworkState)comboStateName.getSelectedItem();
        if(networkState!= null)
        {
            populateCityCombo(networkState);
        }
    }//GEN-LAST:event_comboStateNameActionPerformed

    public void populateRoleCombo()
    {
        ComboRole.removeAllItems();
        ComboRole.addItem("Admin Role");
       
    }
    private void ComboCityNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCityNameActionPerformed
        // TODO add your handling code here:
        NetworkCity city=(NetworkCity)ComboCityName.getSelectedItem();
        if(city!= null)
        {
            populateEnterpriseName(city);
        }
        
    }//GEN-LAST:event_ComboCityNameActionPerformed

    public void populateUserAccountTable()
    {
        DefaultTableModel model=(DefaultTableModel)UserAccountsJTable.getModel();
        model.setRowCount(0);
        for(Network network:system.getNetworkList())
        {
            for(NetworkState state: network.getNetworkStateList())
            {
            for(NetworkCity city:state.getNetworkCityList())
            {
                for(Enterprise enterprise:city.getEnterpriseDirectory().getEnterpriseList())
                {
                    for(UserAccount userAccount:enterprise.getUserAccountDirectory().getUserAccountList())
                    {
                    Object[]row=new Object[6];
                    row[0]=enterprise;
                    row[1]=enterprise.getEnterpriseType();
                    row[2]=network;
                    row[3]=state;
                    row[4]=city;
                    row[5]=userAccount;
                    model.addRow(row);
                    }
                    
                }
                
            }
        }
        
    }
    }
    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        Pattern pattern;
        pattern = Pattern.compile("[a-zA-Z ]+");
        
        String userName=txtUserName.getText().trim();
        String password=txtPassword.getText().trim();
        String name=txtName.getText().trim();
        String lastName=txtLastName.getText().trim();
        Network country=(Network)ComboCountry.getSelectedItem();
        NetworkState state=(NetworkState)comboStateName.getSelectedItem();
        NetworkCity city=(NetworkCity)ComboCityName.getSelectedItem();
        Enterprise enterprise=(Enterprise)ComboEnterpriseName.getSelectedItem();
        if(userName.isEmpty() || password.isEmpty() || name.isEmpty() || lastName.isEmpty() || 
                state==null || city==null || enterprise== null || country==null)
        {
            JOptionPane.showMessageDialog(null, "please enter valid inputs");
            return;
        }
        
        Matcher finame = pattern.matcher(name);
         if(!finame.matches())
         {
             JOptionPane.showMessageDialog(null,"Only alphabhats are allowed");
             return;
         }
         
         Matcher lstname = pattern.matcher(lastName);
         if(!lstname.matches())
         {
             JOptionPane.showMessageDialog(null,"Only alphabhats are allowed");
             return;
         }
        Boolean result= EcoSystem.checkIfUsernameIsUnique(userName);
        if(result==false)
        {
            //JOptionPane.showMessageDialog(null, "This username already exists.");
            return;
        }
        Person person=enterprise.getPerosnDirectory().createPerson(name,lastName);
        UserAccount useraccount=enterprise.getUserAccountDirectory().createUserAccount(userName, password, person, new AdminRole());
        populateUserAccountTable();
       
        txtName.setText(null);
        txtPassword.setText(null);
        txtUserName.setText(null);
        txtLastName.setText(null);
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void ComboCountryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboCountryActionPerformed
        // TODO add your handling code here:
        Network network=(Network)ComboCountry.getSelectedItem();
        if(network != null)
        {
            populateStateCombo(network);
        }
    }//GEN-LAST:event_ComboCountryActionPerformed

    private void ComboRoleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboRoleActionPerformed
        // TODO add your handling code here:
        String roleName=(String)ComboRole.getSelectedItem();
        if(roleName !=null)
        {
        if(roleName.equals("Main Admin Role"))
        {
            ComboCountry.setVisible(false);
            comboStateName.setVisible(false);
            ComboCityName.setVisible(false);
            ComboEnterpriseName.setVisible(false);
        }
        else
            
        {
            ComboCountry.setVisible(true);
            comboStateName.setVisible(true);
            ComboCityName.setVisible(true);
            ComboEnterpriseName.setVisible(true);
        }
        }
    }//GEN-LAST:event_ComboRoleActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout=(CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRow=UserAccountsJTable.getSelectedRow();
        if(selectedRow < 0)
        {
            JOptionPane.showMessageDialog(null, "please select a row");
            return;
        }
        Enterprise enterprise=(Enterprise)UserAccountsJTable.getValueAt(selectedRow,0);
        UserAccount ua=(UserAccount)UserAccountsJTable.getValueAt(selectedRow,5);
        enterprise.getPerosnDirectory().getPersonList().remove(ua.getPerson());
        enterprise.getUserAccountDirectory().getUserAccountList().remove(ua);
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnrefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnrefreshActionPerformed
        // TODO add your handling code here:
        populateUserAccountTable();
    }//GEN-LAST:event_btnrefreshActionPerformed

    public void populateCountryCombo()
    {
        ComboCountry.removeAllItems();
        for(Network network:system.getNetworkList())
        {
            ComboCountry.addItem(network);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboCityName;
    private javax.swing.JComboBox ComboCountry;
    private javax.swing.JComboBox ComboEnterpriseName;
    private javax.swing.JComboBox ComboRole;
    private javax.swing.JTable UserAccountsJTable;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton btnrefresh;
    private javax.swing.JComboBox comboStateName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
